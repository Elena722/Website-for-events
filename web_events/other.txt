def filter_category_page(request, category):
#     category = category.title()
#     print(category.__class__)
#     print('category = ', category)
#     queryset_get = Category.objects.get(name=category)
#     print(queryset_get)
#     try:
#         queryset_get = Category.objects.get(name=category)
#         queryset_filter = Events.objects.eventtime().filter(category=queryset_get)
#     except:
#         raise Http404
#     template_name = 'events/filter_category_page.html'
#     context = {'objects': queryset_filter}
#     return render(request, template_name, context)


# @login_required
# def create_event(request):
#     form = CreateEventForm(request.POST or None)
#     if form.is_valid():
#         print(form.cleaned_data)
#         title = form.cleaned_data['title']
#         event_type = form.cleaned_data['event_type']
#         start_date = form.cleaned_data['start_date']
#         end_date = form.cleaned_data['end_date']
#         start_time = form.cleaned_data['start_time']
#         end_time = form.cleaned_data['end_time']
#         description = form.cleaned_data['description']
#         location = form.cleaned_data['location']
#         host = form.cleaned_data['host']
#         category = Category.objects.get(name=form.cleaned_data['category'])
#         author = request.user
#         # cover = form.cleaned_data['cover']
#         obj = Events.objects.create(title=title, event_type=event_type, start_date=start_date,
#                                     end_date=end_date, start_time=start_time, end_time=end_time,
#                                     description=description, location=location, host=host,
#                                     category=category, author=author)
#         form = CreateEventForm()
#     else:
#         print('No')
#     template_name = 'events/create.html'
#     context = {'form': form}
#     return render(request, template_name, context)



<hr>
            {% if request.user.is_authenticated %}
            <a class="btn btn-primary btn-comment" href="{% url 'add_comment' event.id %}">Add comment</a>
            {% endif %}
            <div class="container">
                {% for comment in event.comments.all %}
                <br>
                {% if comment.approved_comment %}
                {% if request.user == comment.author %}
                <div class="w-50 p-3" style="background-color: #eee;">
                    <div class="text-right">
                        <a class="btn btn-danger btn-comment btn-sm"
                           href="{% url 'comment_remove' pk=comment.pk %}">x</a>
                        <a class="btn btn-success btn-comment btn-sm"
                           href="{% url 'comment_update' pk=comment.pk %}">U</a>
                    </div>
                    <p class="font-italic text-right text-secondary">{{ comment.created_date }}</p>
                    <p>{{ comment.text|safe|linebreaks }}</p>
                    <p class="font-italic text-right text-secondary">Author: {{ comment.author }}</p>
                </div>
                {% else %}
                <div class="w-50 p-3" style="background-color: #eee;">
                    <p class="font-italic text-right text-secondary">{{ comment.created_date }}</p>
                    <p>{{ comment.text|safe|linebreaks }}</p>
                    <p class="font-italic text-right text-secondary">Author: {{ comment.author }}</p>
                </div>
                {% endif %}
                {% else %}


                {% if request.user == comment.author %}
                <div class="w-50 p-3" style="background-color: #eee;">
                    <div class="text-right">
                        <a class="btn btn-danger btn-comment btn-sm"
                           href="{% url 'comment_remove' pk=comment.pk %}">x</a>
                        <a class="btn btn-warning btn-comment btn-sm"
                           href="{% url 'comment_approve' pk=comment.pk %}">âœ”</a>
                        <a class="btn btn-success btn-comment btn-sm"
                           href="{% url 'comment_update' pk=comment.pk %}">U</a>
                    </div>
                    <p>{{ comment.text|safe|linebreaks }}</p>
                    <p class="font-italic text-right text-secondary">Author: {{ comment.author }}</p>
                </div>
                {% endif %}
                {% endif %}
                {% empty %}
                <p>No comments</p>
                {% endfor %}
            </div>
        </div>